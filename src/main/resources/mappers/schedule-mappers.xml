<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ScheduleMapper">
	<!-- <resultMap type="ScheduleDto" id="resultSchedule"> property에는 vo의 필드명, 
		column에는 db tabel의 컬럼명 두개를 map으로 연결한다 </resultMap> -->
	<resultMap type="map" id="resultSchedule">
		<!-- property에는 vo의 필드명, column에는 db tabel의 컬럼명 두개를 map으로 연결한다 -->
		<id property="bno" column="bno" />
		<result property="pno" column="pno" />
		<result property="pname" column="pname" />
		<result property="bname" column="bname" />
		<result property="btype" column="btype" />
		<result property="bopen" column="bopen" />
		<result property="bdate" column="bdate" />
		<result property="bfirst" column="bfirst" />
		<result property="sstart" column="sstart" />
		<result property="send" column="send" />
		<result property="splace" column="splace" />
		<result property="smemo" column="smemo" />
		<result property="attendee" column="attendee" />
		<result property="attendees" column="attendees" />
		<result property="uno" column="uno" />
		<result property="uname" column="uname" />
		<result property="tstart" column="tstart" />
		<result property="tend" column="tend" />
		<result property="taskmanager" column="taskmanager" />
		<result property="count" column="count"/>
	</resultMap>
	
	<resultMap type="ScheduleDto" id="resultScheduleDto">
		<id property="bno" column="bno" />
		<result property="sstart" column="sstart" />
		<result property="send" column="send" />
		<result property="splace" column="splace" />
		<result property="smemo" column="smemo" />
		<result property="attendee" column="attendee" />
	</resultMap>
	

	<!-- boardall 인서트
	<insert id="insertBoardAllSche">
	 <![CDATA[
	 	insert into boardall values (bno_se.nextval, #{pno} ,#{uno},#{bname},#{bopen},'3', 0, sysdate)
		]]>
	</insert> -->
	
	<!-- 프로젝트 일정 글 insert-->
	<insert id="insertSchedule" flushCache="true" statementType="PREPARED" parameterType="java.util.List">  
		<![CDATA[
		 insert into schedule values (bno_se.currval,#{sstart}, #{send}, #{splace}, #{smemo}, #{attendee}) 
		]]>
	</insert>
	
	<!-- 프로젝트 일정 글 update-->
	<select id="selectOnlySchedule" resultType="arraylist"  resultMap="resultScheduleDto" parameterType="ScheduleDto">
		<![CDATA[
		 	select * from schedule where bno = #{bno}
		 ]]>
	</select>
	<insert id="insertUpdateSchedule" flushCache="true" statementType="PREPARED" parameterType="ScheduleDto">  
		<![CDATA[
		 insert into schedule values (#{bno}, #{sstart}, #{send}, #{splace}, #{smemo}, #{attendee}) 
		]]>
	</insert>
	<delete id="deleteUpdateSchedule">
		<![CDATA[
		 	delete from schedule where bno=#{bno}
		]]>
	</delete>
	
	
	<update id="updateSchedule">
		<![CDATA[
		 	update schedule set attendee=#{attendee} where bno=#{bno}
		 ]]>
	</update>
	
	<delete id="deleteSchedule">
		<![CDATA[
		 	delete from boardall where bno=#{bno}
		]]>
	</delete>
	
	<select id="ListScheduleAll" resultType="map" resultMap="resultSchedule">
		<![CDATA[
		select b.bno, b.pno, b.uno, u.uname, b.bname, b.bopen, b.btype, b.bfirst, b.bdate, s.sstart, s.send, s.splace, s.smemo, count(s.attendee) as count, listagg(s.attendee, ',') within group(order by s.attendee) as attendees
			from boardall b
			inner join schedule s on b.bno = s.bno
			inner join users u on u.uno = b.uno
			where pno = #{pno}
			group by b.bno,b.pno, b.uno, u.uname, b.bname, b.bopen, b.btype, b.bfirst, b.bdate, s.sstart, s.send, s.splace, s.smemo
			order by b.bno
		]]>
	</select>
	
	
	
	<!-- 전체 일정 보기, u.uname null : 내가 포함된 일정, attendees null : 내가 등록한 일정 -->
	<select id="selectAllSche" resultMap="resultSchedule">
		select p.pno, p.pname, bs.bno, bs.pno, bs.uno, u.uname, bs.bname, bs.bopen, bs.btype, bs.bfirst, bs.bdate, bs.sstart, bs.send, bs.splace, bs.smemo, bs.attendees
    		from project p 
   			 inner join (select b.bno, b.pno, b.uno, b.bname, b.bopen, b.btype, b.bfirst, b.bdate,
                s.sstart, s.send, s.splace, s.smemo, listagg(s.attendee, ',') within group(order by s.attendee) attendees
                from boardall b inner join schedule s on b.bno = s.bno
                group by b.bno, b.pno, b.uno, b.bname, b.bopen, b.btype, b.bfirst, b.bdate,s.sstart, s.send, s.splace, s.smemo
                )bs on p.pno = bs.pno
    		inner join users u on u.uno = bs.uno
    		where p.pno = #{pno} and (uname = #{uname} or attendees like #{attendee})
   		 	order by bs.sstart
	</select>

	<!--업무 : 내업무 (5), 요청한 업무(1), 전체 업무 where 절 사라지게 -->
	<select id="selectAllTask" resultMap="resultSchedule">
		select p.pno, p.pname, b.bno, b.pno, b.uno, u.uname, b.bname, b.bopen, b.btype, b.bfirst, b.bdate, t.tstart as sstart, t.tend as send, t.tmemo as smemo, t.taskmanager as attendees
			from project p 
			inner join boardall b on p.pno = b.pno
			inner join task t on b.bno = t.bno
			inner join users u on u.uno = b.uno
			where p.pno = #{pno} and (u.uname =#{uname} or t.taskmanager like #{attendee})
			order by t.tstart
		<!-- <if test="paramMap != null"> where b.uno = #{buno} or t.taskmanager 
			=#{svuno} </if> -->
	</select>




</mapper>
