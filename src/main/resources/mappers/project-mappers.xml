<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Project">

	<!-- 윤진 / 프로젝트목록--> 
	<!-- 프로젝트 전체 목록 : 회사 -->
	<resultMap type="ProjectDto" id="selectOneCom">
		<id column="cno" property="cno" />
		<result column="cname" property="cname" />
		<result column="ucnt" property="ucnt" />
		<result column="pno" property="pno" />
		<result column="cnt" property="cnt" />
	</resultMap>
	<select id="selectOneCompany" resultMap="selectOneCom">
		<![CDATA[
			select c.cno as cno, c.cname as cname, uc.ucnt as ucnt, p.pno as pno, a.cnt as cnt
			    from 
			        (select c.cno, c.cname from company c join users u on c.cno = u.cno where u.uno=#{uno}) c
			    left join  
			        (select cno, count(*) as ucnt from users group by cno) uc on c.cno = uc.cno
			    inner join project p on trim(p.pname) = trim(c.cname)
			    left outer join (select pno, uno, count(acount) as cnt from alert group by pno, uno, acount having uno = #{uno} and acount=1) a on p.pno = a.pno
		]]>
	</select>

	<!-- 프로젝트 전체 목록 : 부서 -->
	<resultMap type="ProjectDto" id="selectOneTeam">
		<id column="dno" property="dno" />
		<result column="cno" property="cno" />
		<result column="dname" property="dname" />
		<result column="pjmembercnt" property="pjmembercnt" />
		<result column="pno" property="pno" />
		<result column="cnt" property="cnt" />
	</resultMap>
	<select id="selectOneTeam" resultMap="selectOneTeam"  parameterType="HashMap">
		<![CDATA[
		select distinct d.cno as cno, d.dno as dno, d.dname as dname, p.pno, pjm.pjmembercnt as pjmembercnt, p.pno as pno, a.cnt as cnt
                from dept d
                inner join project p on p.pname = d.dname and p.cno=d.cno
                inner join project_dept pjd on d.dno = pjd.dno and pjd.cno=d.cno
                inner join (select pno, cno, count(*) as pjmembercnt from project_member group by pno, cno having cno = #{cno}) pjm on p.pno = pjm.pno
                left join (select * from project_member where uno=#{uno})pjm2 on p.pno=pjm2.pno
                full outer join (select pno, uno, count(acount) as cnt from alert group by pno, uno, acount having uno = #{uno} and acount=1) a on p.pno = a.pno
                where d.cno = #{cno} and pjm2.uno=#{uno}
		]]>
	</select>
<!-- 			select d.cno as cno, d.dno as dno, d.dname as dname, u.ucnt as ucnt, p.pno as pno, a.cnt as cnt
                from dept d
                inner join project p on p.pname = d.dname and p.cno=d.cno
                inner join project_dept pjd on d.dno = pjd.dno and pjd.cno=d.cno
                inner join (select pno, cno, count(*) as ucnt from project_member group by pno, cno having cno = #{cno}) u on p.pno = u.pno
                left join (select * from project_member where uno=#{uno})pjm2 on p.pno=pjm2.pno
                full outer join (select pno, uno, count(acount) as cnt from alert group by pno, uno, acount having uno = #{uno} and acount=1) a on p.pno = a.pno
                where d.cno = #{cno} and pjm2.uno=#{uno} -->

	<resultMap type="map" id="projectListMap">
		<id column="pj_pno" property="pno" />
		<result column="pj_pname" property="pname" />
		<result column="pj_open" property="popen" />
		<result column="pjmembercnt" property="pjmembercnt" />
		<result column="pjteam" property="pjteam" />
		<result column="cnt" property="cnt" />
		<result column="dname" property="dname" />
	</resultMap>
	<!-- 프로젝트 전체 목록 -->
	<select id="selectListProject" resultMap="projectListMap">
		<![CDATA[
			select pj.pno as pj_pno, pj.pname as pj_pname, pj.popen as pj_open, pjm.pjmembercnt as pjmembercnt, pjteam.dname as pjteam, a.cnt as cnt
		    from project pj 
		    	inner join company c on c.cno = pj.cno
		        left outer join (select pno, uno, count(acount) as cnt from alert a group by pno, uno, acount having uno = #{uno} and acount=1) a on pj.pno = a.pno
		        inner join 
		        (select * from project_member where uno=#{uno}) pju on pj.pno = pju.pno
		        inner join 
		        (select pno, count(*) as pjmembercnt from project_member group by pno order by pno ) pjm on pj.pno = pjm.pno
		        left join
		        (select pjd.pno, LISTAGG(d.dname,',') WITHIN GROUP(ORDER BY d.dname) AS dname 
		            from project_dept pjd, dept d 
		            where d.dno = pjd.dno 
		            group by pjd.pno) pjteam 
		        on pj.pno = pjteam.pno 
		        group by pj.pno, pj.pname, pj.popen, pjm.pjmembercnt, pjteam.dname, a.cnt, c.cname
		        having pj.pname <> c.cname and (pj.pname<>pjteam.dname or pjteam.dname is null)
		    order by pj.pno desc 
	     ]]>
	</select>

	<!-- 프로젝트 미보관함 -->
	<select id="selectListPjUns" resultMap="projectListMap" parameterType="map">
		<![CDATA[
			select pj.pno as pj_pno, pj.pname as pj_pname, pj.popen as pj_open, pjm.pjmembercnt as pjmembercnt, pjteam.dname as pjteam, a.cnt as cnt
		    from project pj 
		        inner join company c on c.cno = pj.cno
		        inner join 
		            (select pno, count(pno) as pjmembercnt from project_member where cno =#{cno} and uno = #{uno} group by pno) pjm on pj.pno = pjm.pno
		        left join
		            (select pjd.pno, LISTAGG(d.dname,',') WITHIN GROUP(ORDER BY d.dname) AS dname 
		                from project_dept pjd, dept d 
		                where d.dno = pjd.dno 
		                group by pjd.pno) pjteam 
		        on pj.pno = pjteam.pno 
		        full outer join (select pno, uno, count(acount) as cnt from alert group by pno, uno, acount having uno = #{uno} and acount=1) a on pj.pno = a.pno
		    where pj.pname <> c.cname and pjteam.dname is null
		    order by pj.pno desc
	     ]]>
	</select>
	
	<!-- 프로젝트 읽지 않음-->
	<select id="selectListPjUnread" resultMap="projectListMap" parameterType="map">
		<![CDATA[
		select pj.pno as pj_pno, pj.pname as pj_pname, pj.popen as pj_open, pjm.pjmembercnt as pjmembercnt, pjteam.dname as pjteam, a.cnt as cnt
		from project pj 
		    inner join company c on c.cno = pj.cno
		    inner join 
		        (select pno, count(pno) as pjmembercnt from project_member where cno=#{cno} group by pno) pjm on pj.pno = pjm.pno
		    left join
		        (select pjd.pno, LISTAGG(d.dname,',') WITHIN GROUP(ORDER BY d.dname) AS dname 
		            from project_dept pjd, dept d 
		            where d.dno = pjd.dno 
		            group by pjd.pno) pjteam 
		    on pj.pno = pjteam.pno 
		    full outer join (select pno, uno, count(acount) as cnt from alert group by pno, uno, acount having uno = #{uno} and acount=1) a on pj.pno = a.pno
		where a.cnt is not null
		order by pj.pno desc
		]]>
	</select>

	<!--부서별 보관함 목록 -->
	<select id="selectListPjTeam" resultMap="projectListMap" parameterType="java.util.HashMap">
		<![CDATA[
		select pj.pno as pj_pno, pj.pname as pj_pname, pj.popen as pj_open, pjm.pjmembercnt as pjmembercnt, pjteam.dname as pjteam, a.cnt as cnt
		    from 
		        project pj 
		        inner join 
		        (select * from project_member where uno= #{uno}) pju
		        on pj.pno = pju.pno
		        inner join 
		        (select pno, count(*) as pjmembercnt from project_member group by pno ) pjm 
		        on pj.pno = pjm.pno
		         inner  join
		        (select pjd.pno, LISTAGG(d.dname,',') WITHIN GROUP(ORDER BY d.dname) AS dname 
		            from project_dept pjd, dept d 
		            where d.dno = pjd.dno 
		            group by pjd.pno) pjteam 
		        on pj.pno = pjteam.pno
		        full outer join (select pno, uno, count(acount) as cnt from alert group by pno, uno, acount having uno =#{uno} and acount=1) a on pj.pno = a.pno
		        where pjteam.dname like '${dname}'
		    order by pj.pno desc
	     ]]>
	</select>

	<!-- 프로젝트 생성 : project / project_member / project_dept -->
	<insert id="insertProject" flushCache="true" statementType="PREPARED"> 
		<![CDATA[ 
			insert into project values( PNO_SE.NEXTVAL, 
			#{pname}, #{pdesc,jdbcType=VARCHAR}, sysdate, #{popen}, #{cno}) 
		]]> 
	</insert> 
	
	<insert id="insertProjectMember" flushCache="true" statementType="PREPARED"> 
		<![CDATA[ 
			insert into project_member values (pno_se.currval, #{uno, jdbcType=VARCHAR}, 1, #{cno}) 
		]]> 
	</insert>
		 
	<insert id="insertProjectDept" 
		parameterType="java.util.List" flushCache="true" statementType="PREPARED"> 
			<![CDATA[ 
				insert into project_dept values
				(pno_se.currval, #{dno,jdbcType=VARCHAR},#{cno}) 
			]]> 
	</insert> 
	
	
	
	
	<!-- 혜원: 회사 프로젝트 번호 불러오기 -->
	<select id="SelectCompanyPno" resultType="string">
		<![CDATA[ 
			select p.pno from project p
			inner join company c
			on p.pname=c.cname
			where p.cno=#{cno}
		]]> 
	</select>
	
	
	<resultMap type="ProjectDto" id="projectNameMap">
		<id column="pname" property="pname" />
		<result column="cnt" property="cnt" />
	</resultMap>
	
	<!-- 프로젝트명, 프로젝트 글 수 불러오기 -->
	<select id="SelectProName" resultMap="projectNameMap">
		<![CDATA[ 
		select p.pname, count(b.bno) as cnt from project p
		    full outer join boardall b
		    on b.pno=p.pno
		    where p.pno=#{pno}
		    group by p.pname
		]]> 
	</select>
	
	<!-- 프로젝트 삭제 -->
	<delete id="deleteProject">
		<![CDATA[ 
		delete from project where pno=#{pno}
		]]> 
	</delete>
	
	<select id="selectPname" resultType="string">
		select pname from project where pno =#{pno}
	</select>
</mapper>
